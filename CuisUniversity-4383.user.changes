

----QUIT----(24 October 2020 13:37:25) CuisUniversity-4383.image priorSource: 17570099!

----STARTUP---- (24 October 2020 13:40:57) as C:\Users\Usuario\Desktop\ing sftwr 1\asdasd\windows64\CuisUniversity-4383.image!


Object subclass: #NameOfSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #NameOfSubclass category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:31:34'!
Object subclass: #NameOfSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:33:28'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classRemoval: #NameOfSubclass stamp: 'A C 10/24/2020 14:33:39'!
Object subclass: #NameOfSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #MarsRoverTest category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:33:50'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!MarsRoverTest methodsFor: 'no messages' stamp: 'A C 10/24/2020 14:33:57'!
test01! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 14:36:36' prior: 50881922!
test01
	MarsRover newStartingAt: 0@0 pointingTo: $N gridHeight: 10 gridWidth: 10. ! !

MarsRover newStartingAt: 0@0 pointingTo: $N gridHeight: 10 gridWidth: 10!
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:37:10'!
newStartingAt: aPoint pointingTo: aCharacter gridHeight: aSmallInteger gridWidth: aSmallInteger4 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNewStartingAt: aPoint pointingTo: aCharacter gridHeight: aSmallInteger gridWidth: aSmallInteger4 ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:38:11' prior: 50881934!
newStartingAt: aPoint pointingTo: aDirection gridHeight: aSmallInteger gridWidth: aSmallInteger4 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNewStartingAt: aPoint pointingTo: aDirection gridHeight: aSmallInteger gridWidth: aSmallInteger4 ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:38:47' prior: 50881947!
newStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aSmallInteger4 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNewStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aSmallInteger4 ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:38:59' prior: 50881960!
newStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNewStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:39:20' prior: 50881973!
newStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	"^self new initializeNewStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger "! !
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:39:23' prior: 50881986!
newStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	"self shouldBeImplemented."
	"^self new initializeNewStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger "! !
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:39:32' prior: 50881999!
newStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	"self shouldBeImplemented."
	"^self new initializeNewStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger "
	^nil.! !
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:40:14' prior: 50882012!
newStartingAt: aPoint pointingTo: aCardinalPoint gridHeight: anIntenger gridWidth: aInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	"self shouldBeImplemented."
	"^self new initializeNewStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger "
	^nil.! !
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:40:25'!
newStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	"self shouldBeImplemented."
	"^self new initializeNewStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger "
	^nil.! !

!methodRemoval: MarsRover class #newStartingAt:pointingTo:gridHeight:gridWidth: stamp: 'A C 10/24/2020 14:40:31'!
newStartingAt: aPoint pointingTo: aCardinalPoint gridHeight: anIntenger gridWidth: aInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	"self shouldBeImplemented."
	"^self new initializeNewStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger "
	^nil.!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 14:41:05' prior: 50881926!
test01
	MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 14:41:59' prior: 50882064!
test01
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 14:42:27' prior: 50882070!
test01
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover XXXXX: 'f'.
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 14:43:08' prior: 50882076!
test01
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover XXXXX: 'f'.
	self assert: (rover position = 1@0).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 14:43:21' prior: 50882083!
test01
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover XXXXX: 'f'.
	self assert: (rover position = 0@1).
	! !

0@0 !

0@1!
!MarsRover methodsFor: 'no messages' stamp: 'A C 10/24/2020 14:44:54'!
position
	^0@1.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 14:45:16'!
XXXXX: YYYYY
	! !

!testRun: #MarsRoverTest #test01 stamp: 'A C 10/24/2020 14:45:34'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'A C 10/24/2020 14:45:34'!
ERROR!

!classDefinition: 'MarsRover class' category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:46:15'!
MarsRover class
	instanceVariableNames: 'aDirection'!
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:46:10' prior: 50882038!
newStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	^self new initializeNewStartingAt: aPoint pointingTo: aDirection gridHeight: anIntenger gridWidth: aInteger
! !
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:46:28' prior: 50882117!
newStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	^self new initializeNewStartingAt: aPoint pointingTo: aCardinalPoint gridHeight: anIntenger gridWidth: aInteger
! !

MarsRover class
	instanceVariableNames: ''!

!classDefinition: 'MarsRover class' category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:46:49'!
MarsRover class
	instanceVariableNames: ''!

!testRun: #MarsRoverTest #test01 stamp: 'A C 10/24/2020 14:47:04'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'A C 10/24/2020 14:47:04'!
ERROR!

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:47:21'!
Object subclass: #MarsRover
	instanceVariableNames: 'point'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:47:21'!
Object subclass: #MarsRover
	instanceVariableNames: 'point cardinalPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:47:21'!
Object subclass: #MarsRover
	instanceVariableNames: 'point cardinalPoint intenger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:47:21'!
Object subclass: #MarsRover
	instanceVariableNames: 'point cardinalPoint intenger integer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 14:47:21'!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint gridHeight: anIntenger gridWidth: aInteger 
	self shouldBeImplemented.
	point := aPoint.
	cardinalPoint := aCardinalPoint.
	intenger := anIntenger.
	integer := aInteger.! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 14:48:17' prior: 50882179!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint gridHeight: anIntenger gridWidth: aInteger 
	point := aPoint.
	cardinalPoint := aCardinalPoint.
	intenger := anIntenger.
	integer := aInteger.! !

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:48:43'!
Object subclass: #MarsRover
	instanceVariableNames: 'pointingTo cardinalPoint intenger integer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 14:48:43' prior: 50882190!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint gridHeight: anIntenger gridWidth: aInteger 
	pointingTo := aPoint.
	cardinalPoint := aCardinalPoint.
	intenger := anIntenger.
	integer := aInteger.! !

Object subclass: #MarsRover
	instanceVariableNames: 'pointingTo cardinalPoint intenger integer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:49:12'!
Object subclass: #MarsRover
	instanceVariableNames: 'pointingTo cardinalPoint intenger integer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:49:22'!
Object subclass: #MarsRover
	instanceVariableNames: 'position cardinalPoint intenger integer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 14:49:22' prior: 50882208!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint gridHeight: anIntenger gridWidth: aInteger 
	position := aPoint.
	cardinalPoint := aCardinalPoint.
	intenger := anIntenger.
	integer := aInteger.! !

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:49:31'!
Object subclass: #MarsRover
	instanceVariableNames: 'position pointingTo intenger integer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 14:49:31' prior: 50882241!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint gridHeight: anIntenger gridWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	intenger := anIntenger.
	integer := aInteger.! !

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:49:49'!
Object subclass: #MarsRover
	instanceVariableNames: 'position pointingTo height integer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 14:49:49' prior: 50882259!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint gridHeight: anIntenger gridWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	integer := aInteger.! !

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 14:49:58'!
Object subclass: #MarsRover
	instanceVariableNames: 'position pointingTo height width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 14:49:58' prior: 50882277!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint gridHeight: anIntenger gridWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 14:50:23'!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger gridWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 14:50:28'!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.! !

!methodRemoval: MarsRover #initializeNewStartingAt:pointingTo:mapHeight:gridWidth: stamp: 'A C 10/24/2020 14:50:34'!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger gridWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.!

!methodRemoval: MarsRover #initializeNewStartingAt:pointingTo:gridHeight:gridWidth: stamp: 'A C 10/24/2020 14:50:38'!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint gridHeight: anIntenger gridWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.!
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 14:50:57' prior: 50882127!
newStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	^self new initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger
! !

!testRun: #MarsRoverTest #test01 stamp: 'A C 10/24/2020 14:51:18'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'A C 10/24/2020 14:51:18'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'A C 10/24/2020 14:52:04'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'A C 10/24/2020 14:52:04'!
ERROR!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 14:52:27' prior: 50882091!
test01
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover XXXXX: 'f'.
	self assert: (rover position = (0@1)).
	! !

!testRun: #MarsRoverTest #test01 stamp: 'A C 10/24/2020 14:52:44'!
PASSED!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 14:54:21'!
recibeCommand: YYYYY
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 14:54:21' prior: 50882362!
test01
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover recibeCommand: 'f'.
	self assert: (rover position = (0@1)).
	! !

!methodRemoval: MarsRover #XXXXX: stamp: 'A C 10/24/2020 14:54:21'!
XXXXX: YYYYY
	!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 14:54:35' prior: 50882372!
recibeCommand: aString
	! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 14:54:41' prior: 50882387!
recibeCommand: aStringCommand
	! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 14:54:43' prior: 50882391!
recibeCommand: aStringCommand

	! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 14:55:11'!
reciveCommand: aStringCommand

	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 14:55:11' prior: 50882376!
test01
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (0@1)).
	! !

!methodRemoval: MarsRover #recibeCommand: stamp: 'A C 10/24/2020 14:55:11'!
recibeCommand: aStringCommand

	!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 14:56:00' prior: 50882404!
test01
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (0@1)).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 14:56:39' prior: 50882416!
test01
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (0@1)).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 14:57:13'!
test01MoveForwardNorth
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (0@1)).
	! !

!methodRemoval: MarsRoverTest #test01 stamp: 'A C 10/24/2020 14:57:13'!
test01
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (0@1)).
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:01:53'!
test02MoveForwardSouth
	|rover|
	rover := MarsRover newStartingAt: 0@2 pointingTo: $S mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (0@1)).
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:01:58'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:01:58'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:03:00' prior: 50882449!
test02MoveForwardSouth
	|rover|
	rover := MarsRover newStartingAt: 0@3 pointingTo: $S mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (0@1)).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:03:05' prior: 50882464!
test02MoveForwardSouth
	|rover|
	rover := MarsRover newStartingAt: 0@3 pointingTo: $S mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (0@2)).
	! !

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:03:13'!
FAILURE!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:03:13'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'A C 10/24/2020 15:04:23' prior: 50882099!
position
	pointingTo = $N ifTrue: [^0@1.].
	^0@2.
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:04:33'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:04:33'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:05:43'!
test03MoveForwardEast
	|rover|
	rover := MarsRover newStartingAt: 1@0 pointingTo: $E mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (0@0)).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:06:05' prior: 50882498!
test03MoveForwardEast
	|rover|
	rover := MarsRover newStartingAt: 1@0 pointingTo: $E mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (2@0)).
	! !

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:06:16'!
FAILURE!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:06:16'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'A C 10/24/2020 15:07:21' prior: 50882488!
position
	pointingTo = $N ifTrue: [^0@1.].
	pointingTo = $S ifTrue: [^0@2.].
	^0@0."pointingTo = $E ifTrue: "
	! !
!MarsRover methodsFor: 'testing' stamp: 'A C 10/24/2020 15:07:23' prior: 50882522!
position
	pointingTo = $N ifTrue: [^0@1.].
	pointingTo = $S ifTrue: [^0@2.].
	^0@0. "pointingTo = $E ifTrue: "
	! !
!MarsRover methodsFor: 'testing' stamp: 'A C 10/24/2020 15:07:42' prior: 50882529!
position
	pointingTo = $N ifTrue: [^0@1.].
	pointingTo = $S ifTrue: [^0@2.].
	^2@0. "pointingTo = $E ifTrue: "
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:07:51'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:07:51'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:07:51'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:08:22'!
test03MoveForwardWest
	|rover|
	rover := MarsRover newStartingAt: 2@0 pointingTo: $W mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (1@0)).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:08:33'!
test04MoveForwardWest
	|rover|
	rover := MarsRover newStartingAt: 2@0 pointingTo: $W mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (1@0)).
	! !

!methodRemoval: MarsRoverTest #test03MoveForwardWest stamp: 'A C 10/24/2020 15:08:37'!
test03MoveForwardWest
	|rover|
	rover := MarsRover newStartingAt: 2@0 pointingTo: $W mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (1@0)).
	!

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:08:41'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:08:41'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:08:41'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:08:41'!
FAILURE!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:08:41'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'A C 10/24/2020 15:09:12' prior: 50882536!
position
	pointingTo = $N ifTrue: [^0@1.].
	pointingTo = $S ifTrue: [^0@2.].
	pointingTo = $E ifTrue: [	^1@0.].
	! !
!MarsRover methodsFor: 'testing' stamp: 'A C 10/24/2020 15:09:31' prior: 50882591!
position
	pointingTo = $N ifTrue: [^0@1.].
	pointingTo = $S ifTrue: [^0@2.].
	pointingTo = $E ifTrue: [	^2@0.].
	^1@0.
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:09:38'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:09:38'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:09:38'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:09:38'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:10:32'!
test05MoveBackwardNorth
	|rover|
	rover := MarsRover newStartingAt: 2@0 pointingTo: $W mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'f'.
	self assert: (rover position = (1@0)).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:10:50' prior: 50882616!
test05MoveBackwardNorth
	|rover|
	rover := MarsRover newStartingAt: 0@2 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover position = (0@1)).
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:11:02'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:11:02'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:11:02'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:11:03'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:11:03'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:11:27' prior: 50882625!
test05MoveBackwardNorth
	|rover|
	rover := MarsRover newStartingAt: 0@1 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover position = (0@0)).
	! !

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:11:31'!
FAILURE!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:11:31'!
FAILURE!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:12:16' prior: 50882399!
reciveCommand: aStringCommand
	
	! !
!MarsRover methodsFor: 'testing' stamp: 'A C 10/24/2020 15:12:37' prior: 50882598!
position
	^position.
	
	! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:13:29' prior: 50882663!
reciveCommand: aStringCommand
	pointingTo = $N ifTrue: [position := 0@1.].
	pointingTo = $S ifTrue: [position := 0@2.].
	pointingTo = $E ifTrue: [	position := 2@0.].
	pointingTo = $W ifTrue: [position := 1@0.].
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:13:36'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:13:36'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:13:36'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:13:36'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:13:36'!
FAILURE!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:13:36'!
FAILURE!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:14:40' prior: 50882671!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := 0@1.].
	pointingTo = $S ifTrue: [position := 0@2.].
	pointingTo = $E ifTrue: [	position := 2@0.].
	pointingTo = $W ifTrue: [position := 1@0.].]
	! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:15:30' prior: 50882698!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := 0@1.].
	pointingTo = $S ifTrue: [position := 0@2.].
	pointingTo = $E ifTrue: [	position := 2@0.].
	pointingTo = $W ifTrue: [position := 1@0.].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := 0@0.].		
		]
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:15:46'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:15:47'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:15:47'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:15:47'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:15:47'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:16:58'!
test06MoveBackwardSouth
	|rover|
	rover := MarsRover newStartingAt: 0@5 pointingTo: $S mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover position = (0@0)).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:17:08' prior: 50882736!
test06MoveBackwardSouth
	|rover|
	rover := MarsRover newStartingAt: 0@5 pointingTo: $S mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover position = (0@6)).
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:17:15'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:17:15'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:17:15'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:17:15'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:17:15'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:17:15'!
FAILURE!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:17:15'!
FAILURE!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:17:39' prior: 50882709!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := 0@1.].
	pointingTo = $S ifTrue: [position := 0@2.].
	pointingTo = $E ifTrue: [	position := 2@0.].
	pointingTo = $W ifTrue: [position := 1@0.].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := 0@0.].		
	pointingTo = $S ifTrue: [position := 0@6.].		

		]
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:18:13'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:18:13'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:18:13'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:18:13'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:18:14'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:18:14'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:18:54'!
test07MoveBackwardEast
	|rover|
	rover := MarsRover newStartingAt: 4@0 pointingTo: $E mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover position = (3@0)).
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:19:00'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:19:00'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:19:00'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:19:00'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:19:01'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:19:01'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:19:01'!
FAILURE!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:19:01'!
FAILURE!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:19:21' prior: 50882774!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := 0@1.].
	pointingTo = $S ifTrue: [position := 0@2.].
	pointingTo = $E ifTrue: [	position := 2@0.].
	pointingTo = $W ifTrue: [position := 1@0.].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := 0@0.].		
	pointingTo = $S ifTrue: [position := 0@6.].		
	pointingTo = $E ifTrue: [position := 3@0.].		

		]
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:19:26'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:19:26'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:19:26'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:19:26'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:19:26'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:19:26'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:19:26'!
PASSED!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:20:11' prior: 50882838!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := 0@2.].
	pointingTo = $E ifTrue: [	position := 2@0.].
	pointingTo = $W ifTrue: [position := 1@0.].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := 0@0.].		
	pointingTo = $S ifTrue: [position := 0@6.].		
	pointingTo = $E ifTrue: [position := 3@0.].		

		]
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:20:25'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:20:26'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:20:26'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:20:26'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:20:26'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:20:26'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:20:26'!
PASSED!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:21:28' prior: 50882875!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (0@1)].
	pointingTo = $W ifTrue: [position := position - (0@1)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := 0@0.].		
	pointingTo = $S ifTrue: [position := 0@6.].		
	pointingTo = $E ifTrue: [position := 3@0.].		

		]
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:21:41'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:21:41'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:21:41'!
FAILURE!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:21:41'!
FAILURE!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:21:41'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:21:41'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:21:41'!
PASSED!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:22:03' prior: 50882912!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := 0@0.].		
	pointingTo = $S ifTrue: [position := 0@6.].		
	pointingTo = $E ifTrue: [position := 3@0.].		

		]
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:22:08'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:22:08'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:22:08'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:22:08'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:22:08'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:22:08'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:22:08'!
PASSED!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:23:01' prior: 50882950!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		

		]
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:23:28'!
test08MoveBackwardWest
	|rover|
	rover := MarsRover newStartingAt: 4@0 pointingTo: $W mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover position = (5@0)).
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:23:31'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:23:31'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:23:31'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:23:31'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:23:32'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:23:32'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:23:32'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 15:23:32'!
PASSED!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:23:41' prior: 50882988!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		]
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:25:10'!
test09RotateLeftNorthToWest
	|rover|
	rover := MarsRover newStartingAt: 4@0 pointingTo: $W mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover position = (5@0)).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:25:22' prior: 50883062!
test09RotateLeftNorthToWest
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover position = (5@0)).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:25:27' prior: 50883071!
test09RotateLeftNorthToWest
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover position = (0@0)).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:25:48' prior: 50883080!
test09RotateLeftNorthToWest
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover pointingTo = $W).
	! !
!MarsRover methodsFor: 'testing' stamp: 'A C 10/24/2020 15:26:07'!
pointingTo
	^pointingTo.
	
	! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:27:41' prior: 50883041!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		]
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:27:50'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:27:50'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:27:50'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:27:50'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:27:50'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:27:51'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:27:51'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 15:27:51'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 15:27:51'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:28:25'!
test10RotateLeftWestToSouth
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $W mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover pointingTo = $S).
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:28:28'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:28:28'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:28:29'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:28:29'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:28:29'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:28:29'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:28:29'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 15:28:29'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 15:28:29'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 15:28:29'!
FAILURE!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 15:28:29'!
FAILURE!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:28:48' prior: 50883102!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [pointingTo := $S].		
		]
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:28:57'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:28:57'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:28:57'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:28:57'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:28:57'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:28:57'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:28:58'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 15:28:58'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 15:28:58'!
FAILURE!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 15:28:58'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 15:28:58'!
FAILURE!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:32:01' prior: 50883198!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $S] 	ifFalse: [
	pointingTo = $E ifTrue: [position := position - (1@0)] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $S].].		].].
		]
	! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:32:17' prior: 50883259!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $S] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $S] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $S].].		].].
		]
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:32:28'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:32:28'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:32:28'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:32:28'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:32:28'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:32:28'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:32:28'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 15:32:28'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 15:32:28'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 15:32:29'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:33:02'!
test11RotateLeftSouthToEast
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $S mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover pointingTo = $E).
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:33:12'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:33:12'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:33:12'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:33:12'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:33:12'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:33:12'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:33:12'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 15:33:13'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 15:33:13'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 15:33:13'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 15:33:13'!
FAILURE!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 15:33:13'!
FAILURE!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:33:24' prior: 50883288!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $E] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $S] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $S].].		].].
		]
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:33:28'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:33:28'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:33:28'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:33:28'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:33:28'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:33:28'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:33:28'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 15:33:28'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 15:33:28'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 15:33:29'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 15:33:29'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:33:49'!
test11RotateLeftEastToNorth
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $E mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover pointingTo = $N).
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:33:57'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:33:57'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:33:57'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:33:57'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:33:57'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:33:57'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:33:57'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 15:33:57'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 15:33:57'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 15:33:57'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftEastToNorth stamp: 'A C 10/24/2020 15:33:58'!
FAILURE!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 15:33:58'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftEastToNorth stamp: 'A C 10/24/2020 15:33:58'!
FAILURE!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:34:10' prior: 50883390!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $E] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $N] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $S].].		].].
		]
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:34:25'!
test12RotateLeftEastToNorth
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $E mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover pointingTo = $N).
	! !

!methodRemoval: MarsRoverTest #test11RotateLeftEastToNorth stamp: 'A C 10/24/2020 15:34:29'!
test11RotateLeftEastToNorth
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $E mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover pointingTo = $N).
	!

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:34:39'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:34:39'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:34:39'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:34:39'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:34:39'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:34:39'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:34:39'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 15:34:39'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 15:34:39'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 15:34:39'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 15:34:39'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 15:34:39'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:35:11'!
test13RotateRightNorthToEast
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover pointingTo = $E).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:35:34'!
test14RotateRightEastToSouth
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $E mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover pointingTo = $S).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:35:51'!
test15RotateRightSouthToWest
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $S mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover pointingTo = $W).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:36:12'!
test16RotateRightWestToNorth
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $W mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'l'.
	self assert: (rover pointingTo = $N).
	! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:36:52' prior: 50883498!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
	pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $E] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $N] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $S].].		].].
		].
	aStringCommand = 'r' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $E.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $W] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $S] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $N].].		].].
		]
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 15:36:59'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 15:36:59'!
FAILURE!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 15:36:59'!
FAILURE!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 15:37:00'!
FAILURE!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 15:37:00'!
FAILURE!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:37:28' prior: 50883580!
test13RotateRightNorthToEast
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'r'.
	self assert: (rover pointingTo = $E).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:37:32' prior: 50883589!
test14RotateRightEastToSouth
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $E mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'r'.
	self assert: (rover pointingTo = $S).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:37:38' prior: 50883598!
test15RotateRightSouthToWest
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $S mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'r'.
	self assert: (rover pointingTo = $W).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 15:37:41' prior: 50883607!
test16RotateRightWestToNorth
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $W mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'r'.
	self assert: (rover pointingTo = $N).
	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 15:37:52'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 15:37:52'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 15:37:52'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 15:37:52'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 15:37:53'!
PASSED!

Object subclass: #MarsRoverPointingTowardsState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #MarsRoverPointingTowardsState category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 15:43:17'!
Object subclass: #MarsRoverPointingTowardsState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

MarsRoverPointingTowardsState subclass: #PointingTowardsNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #PointingTowardsNorth category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 15:43:45'!
MarsRoverPointingTowardsState subclass: #PointingTowardsNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

MarsRoverPointingTowardsState subclass: #PointingTowardsSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #PointingTowardsSouth category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 15:43:49'!
MarsRoverPointingTowardsState subclass: #PointingTowardsSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

MarsRoverPointingTowardsState subclass: #PointingTowardsEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #PointingTowardsEast category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 15:43:53'!
MarsRoverPointingTowardsState subclass: #PointingTowardsEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

MarsRoverPointingTowardsState subclass: #PointingTowardsWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #PointingTowardsWest category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 15:43:56'!
MarsRoverPointingTowardsState subclass: #PointingTowardsWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!MarsRoverPointingTowardsState methodsFor: 'no messages' stamp: 'A C 10/24/2020 15:45:21'!
foward! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:45:30'!
backwards! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:45:39'!
rotateLeft! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:45:42'!
rotateRight! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:45:53' prior: 50883858!
backwards
	self subclassResponsibility.! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:45:59' prior: 50883854!
foward
	self subclassResponsibility.! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:46:04' prior: 50883862!
rotateLeft
	self subclassResponsibility.! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:46:08' prior: 50883866!
rotateRight
	self subclassResponsibility.! !
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:23' overrides: 50883871!
backwards
	self subclassResponsibility.! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:23' overrides: 50883871!
backwards
	self subclassResponsibility.! !
!PointingTowardsEast methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:23' overrides: 50883871!
backwards
	self subclassResponsibility.! !
!PointingTowardsWest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:23' overrides: 50883871!
backwards
	self subclassResponsibility.! !

!methodRemoval: MarsRoverPointingTowardsState #backwards stamp: 'A C 10/24/2020 15:47:24'!
backwards
	self subclassResponsibility.!
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:37' overrides: 50883876!
foward
	self subclassResponsibility.! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:37' overrides: 50883876!
foward
	self subclassResponsibility.! !
!PointingTowardsEast methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:37' overrides: 50883876!
foward
	self subclassResponsibility.! !
!PointingTowardsWest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:37' overrides: 50883876!
foward
	self subclassResponsibility.! !

!methodRemoval: MarsRoverPointingTowardsState #foward stamp: 'A C 10/24/2020 15:47:37'!
foward
	self subclassResponsibility.!
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:44' overrides: 50883881!
rotateLeft
	self subclassResponsibility.! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:44' overrides: 50883881!
rotateLeft
	self subclassResponsibility.! !
!PointingTowardsEast methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:44' overrides: 50883881!
rotateLeft
	self subclassResponsibility.! !
!PointingTowardsWest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:44' overrides: 50883881!
rotateLeft
	self subclassResponsibility.! !

!methodRemoval: MarsRoverPointingTowardsState #rotateLeft stamp: 'A C 10/24/2020 15:47:44'!
rotateLeft
	self subclassResponsibility.!
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:52' overrides: 50883886!
rotateRight
	self subclassResponsibility.! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:52' overrides: 50883886!
rotateRight
	self subclassResponsibility.! !
!PointingTowardsEast methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:53' overrides: 50883886!
rotateRight
	self subclassResponsibility.! !
!PointingTowardsWest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:47:53' overrides: 50883886!
rotateRight
	self subclassResponsibility.! !

!methodRemoval: MarsRoverPointingTowardsState #rotateRight stamp: 'A C 10/24/2020 15:47:53'!
rotateRight
	self subclassResponsibility.!
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:48:12'!
backwards
	self subclassResponsibility.! !

!methodRemoval: PointingTowardsWest #backwards stamp: 'A C 10/24/2020 15:48:12'!
backwards
	self subclassResponsibility.!
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:48:29' prior: 50883891 overrides: 50883988!
backwards
	self subclassResponsibility.! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:48:29' prior: 50883896 overrides: 50883988!
backwards
	self subclassResponsibility.! !
!PointingTowardsEast methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:48:29' prior: 50883901 overrides: 50883988!
backwards
	self subclassResponsibility.! !
!PointingTowardsWest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:48:29' overrides: 50883988!
backwards
	self subclassResponsibility.! !

!methodRemoval: MarsRoverPointingTowardsState #backwards stamp: 'A C 10/24/2020 15:48:29'!
backwards
	self subclassResponsibility.!
!MarsRoverPointingTowardsState methodsFor: 'no messages' stamp: 'A C 10/24/2020 15:48:43'!
backwards
	self subclassResponsibility.! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:48:55'!
foward
	self subclassResponsibility.! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:49:07'!
rotateLeft
	self subclassResponsibility.! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:49:16'!
rotateRight
	self subclassResponsibility.! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 15:52:42'!
fowardCommand
	! !

Object subclass: #MarsRover
	instanceVariableNames: 'position pointingTo height width MarsRoverPointingTowards'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #MarsRover category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 15:53:02'!
Object subclass: #MarsRover
	instanceVariableNames: 'position pointingTo height width MarsRoverPointingTowards'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 15:53:26' prior: 50884043!
fowardCommand
	MarsRoverPointingTowards foward.! !

!methodRemoval: MarsRover #fowardCommand stamp: 'A C 10/24/2020 15:54:08'!
fowardCommand
	MarsRoverPointingTowards foward.!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 15:54:46' prior: 50883616!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
		MarsRoverPointingTowards foward.
	"pointingTo = $N ifTrue: [position := position + (0@1)].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)]."].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $E] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $N] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $S].].		].].
		].
	aStringCommand = 'r' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $E.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $W] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $S] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $N].].		].].
		].
! !
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:58:27' prior: 50883915 overrides: 50884029!
foward
	[:position | position + (0@1)].! !
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 15:59:34' prior: 50884111 overrides: 50884029!
foward
	Rover move: [:position | position + (0@1)].! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 15:59:55'!
move: aBlock! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 16:00:35' prior: 50884121!
move: aBlock
	position := aBlock perform: position.! !

----End fileIn of C:\Users\Usuario\Desktop\ing sftwr 1\asdasd\windows64\Packages\TerseGuide.pck.st----!
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 16:01:47' prior: 50884125!
move: aBlock
	position := aBlock value: position.! !

Object subclass: #MarsRoverPointingTowardsState
	instanceVariableNames: 'MarsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #MarsRoverPointingTowardsState category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 16:02:38'!
Object subclass: #MarsRoverPointingTowardsState
	instanceVariableNames: 'MarsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!MarsRoverPointingTowardsState class methodsFor: 'no messages' stamp: 'A C 10/24/2020 16:03:23'!
newWith: aMarsRover
	^self new initializeWith: aMarsRover! !
!PointingTowardsNorth class methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:03:29' overrides: 50887084!
newWith: aMarsRover
	^self new initializeWith: aMarsRover! !
!PointingTowardsSouth class methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:03:30' overrides: 50887084!
newWith: aMarsRover
	^self new initializeWith: aMarsRover! !
!PointingTowardsEast class methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:03:30' overrides: 50887084!
newWith: aMarsRover
	^self new initializeWith: aMarsRover! !
!PointingTowardsWest class methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:03:30' overrides: 50887084!
newWith: aMarsRover
	^self new initializeWith: aMarsRover! !

!methodRemoval: MarsRoverPointingTowardsState class #newWith: stamp: 'A C 10/24/2020 16:03:30'!
newWith: aMarsRover
	^self new initializeWith: aMarsRover!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:03:57' prior: 50884071!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
		MarsRoverPointingTowards foward.
	"pointingTo = $N ifTrue: [position := position + (0@1)]."
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $E] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $N] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $S].].		].].
		].
	aStringCommand = 'r' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $E.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $W] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $S] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $N].].		].].
		].
! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:04:14' prior: 50887118!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
		
	pointingTo = $N ifTrue: [MarsRoverPointingTowards foward.].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $E] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $N] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $S].].		].].
		].
	aStringCommand = 'r' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $E.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $W] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $S] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $N].].		].].
		].
! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:04:24'!
ERROR!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:04:25'!
PASSED!

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:04:25'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:06:03' prior: 50882313!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.
	pointingTo = $N ifTrue: []! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:06:33' prior: 50887244!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.
	pointingTo = $N ifTrue: [MarsRoverPointingTowards := PointingTowardsNorth newWith: self.]! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:07:14' prior: 50887254!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.
	pointingTo = $N ifTrue: [MarsRoverPointingTowards := PointingTowardsNorth newWith: self.].
	pointingTo = $E ifTrue: [MarsRoverPointingTowards := PointingTowardsEast newWith: self.].
	pointingTo = $S ifTrue: [MarsRoverPointingTowards := PointingTowardsSouth newWith: self.].
	pointingTo = $W ifTrue: [MarsRoverPointingTowards := PointingTowardsWest newWith: self.].! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:07:29'!
ERROR!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:07:29'!
ERROR!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:07:29'!
ERROR!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:07:29'!
ERROR!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:07:29'!
ERROR!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:07:29'!
ERROR!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:07:29'!
ERROR!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:07:29'!
ERROR!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:07:30'!
ERROR!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:07:30'!
ERROR!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:07:30'!
ERROR!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:07:30'!
ERROR!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:07:30'!
ERROR!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:07:30'!
ERROR!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:07:30'!
ERROR!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:07:30'!
ERROR!

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:07:46'!
ERROR!

MarsRoverPointingTowardsState subclass: #PointingTowardsNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #PointingTowardsNorth category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 16:09:29'!
MarsRoverPointingTowardsState subclass: #PointingTowardsNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #PointingTowardsNorth category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 16:09:42'!
MarsRoverPointingTowardsState subclass: #PointingTowardsNorth
	instanceVariableNames: 'rover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:09:40' prior: 50884117 overrides: 50884029!
foward
	rover move: [:position | position + (0@1)].! !

MarsRoverPointingTowardsState subclass: #PointingTowardsNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!

!classDefinition: #PointingTowardsNorth category: 'Mars-Rover-Ejercicio' stamp: 'A C 10/24/2020 16:09:55'!
MarsRoverPointingTowardsState subclass: #PointingTowardsNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover-Ejercicio'!
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:10:09' prior: 50887361 overrides: 50884029!
foward
	MarsRover move: [:position | position + (0@1)].! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:10:45'!
initializeWith: aMarsRover
	MarsRover := aMarsRover.! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:11:02' overrides: 50887386!
initializeWith: aMarsRover
	MarsRover := aMarsRover.! !
!PointingTowardsEast methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:11:02' overrides: 50887386!
initializeWith: aMarsRover
	MarsRover := aMarsRover.! !
!PointingTowardsWest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:11:02' overrides: 50887386!
initializeWith: aMarsRover
	MarsRover := aMarsRover.! !
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:11:02' overrides: 50887386!
initializeWith: aMarsRover
	MarsRover := aMarsRover.! !

!methodRemoval: MarsRoverPointingTowardsState #initializeWith: stamp: 'A C 10/24/2020 16:11:02'!
initializeWith: aMarsRover
	MarsRover := aMarsRover.!

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:11:11'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:11:11'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:11:11'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:11:11'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:11:11'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:11:11'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:11:11'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:11:12'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:11:12'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:11:12'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:11:12'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:11:12'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:11:12'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:11:12'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:11:12'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:11:12'!
PASSED!
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:11:45' prior: 50883998 overrides: 50884024!
backwards
	MarsRover move: [:position | position - (0@1)].! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:12:58'!
fowardXaxis
	self subclassResponsibility.! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:13:15' prior: 50887474!
fowardXaxis
	MarsRover move: [:position | position + (0@1)].! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:13:29'!
backwardsXaxis
	MarsRover move: [:position | position - (0@1)].! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:13:52'!
fowardYaxis
	MarsRover move: [:position | position + (1@0)].! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:14:07'!
backwardsYaxis
	MarsRover move: [:position | position - (1@0)].! !

1@0!
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:14:38' prior: 50887485!
backwardsXaxis
	MarsRover move: [:position | position - (1@0)].! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:14:50' prior: 50887497!
backwardsYaxis
	MarsRover move: [:position | position - (0@1)].! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:14:57' prior: 50887479!
fowardXaxis
	MarsRover move: [:position | position + (1@0)].! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:15:03' prior: 50887491!
fowardYaxis
	MarsRover move: [:position | position + (0@1)].! !
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:15:25' prior: 50887381 overrides: 50884029!
foward
	self fowardXaxis.! !
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:15:39' prior: 50887527 overrides: 50884029!
foward
	self fowardYaxis.! !
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:16:03' prior: 50887468 overrides: 50884024!
backwards
	self backwardsYaxis.! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:16:29' prior: 50883920 overrides: 50884029!
foward
	self backwardsYaxis.! !
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:16:51'!
decrementXaxis
	MarsRover move: [:position | position - (1@0)].! !

!methodRemoval: MarsRoverPointingTowardsState #backwardsXaxis stamp: 'A C 10/24/2020 16:16:51'!
backwardsXaxis
	MarsRover move: [:position | position - (1@0)].!
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:17:19'!
decrementYaxis
	MarsRover move: [:position | position - (0@1)].! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:17:19' prior: 50887543 overrides: 50884029!
foward
	self decrementYaxis.! !
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:17:19' prior: 50887537 overrides: 50884024!
backwards
	self decrementYaxis.! !

!methodRemoval: MarsRoverPointingTowardsState #backwardsYaxis stamp: 'A C 10/24/2020 16:17:19'!
backwardsYaxis
	MarsRover move: [:position | position - (0@1)].!
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:17:33'!
incrementXaxis
	MarsRover move: [:position | position + (1@0)].! !

!methodRemoval: MarsRoverPointingTowardsState #fowardXaxis stamp: 'A C 10/24/2020 16:17:34'!
fowardXaxis
	MarsRover move: [:position | position + (1@0)].!
!MarsRoverPointingTowardsState methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:17:52'!
incrementYaxis
	MarsRover move: [:position | position + (0@1)].! !

!methodRemoval: MarsRoverPointingTowardsState #fowardYaxis stamp: 'A C 10/24/2020 16:17:53'!
fowardYaxis
	MarsRover move: [:position | position + (0@1)].!
!PointingTowardsEast methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:19:16' prior: 50884010 overrides: 50884024!
backwards
	self decrementXaxis.! !
!PointingTowardsEast methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:19:29' prior: 50883925 overrides: 50884029!
foward
	self incrementXaxis.! !
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:19:42' prior: 50887532 overrides: 50884029!
foward
	self incrementYaxis.! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:20:02' prior: 50884004 overrides: 50884024!
backwards
	self incrementYaxis.! !
!PointingTowardsWest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:20:27' prior: 50884015 overrides: 50884024!
backwards
	self incrementXaxis.! !
!PointingTowardsWest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:20:42' prior: 50883930 overrides: 50884029!
foward
	self decrementXaxis.! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:21:12'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:21:12'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:21:12'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:21:12'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:21:12'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:21:12'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:21:12'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:21:12'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:21:12'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:21:13'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:21:13'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:21:13'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:21:13'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:21:13'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:21:13'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:21:13'!
PASSED!

----SNAPSHOT----(24 October 2020 16:21:18) CuisUniversity-4383.image priorSource: 17607122!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:21:52' prior: 50887156!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
		MarsRoverPointingTowards foward.
	pointingTo = $N ifTrue: [MarsRoverPointingTowards foward.].
	pointingTo = $S ifTrue: [position := position - (0@1)].
	pointingTo = $E ifTrue: [	position := position + (1@0)].
	pointingTo = $W ifTrue: [position := position - (1@0)].].
	aStringCommand = 'b' ifTrue: [
		MarsRoverPointingTowards backwards.
	pointingTo = $N ifTrue: [position := position - (0@1)].		
	pointingTo = $S ifTrue: [position := position + (0@1)].		
	pointingTo = $E ifTrue: [position := position - (1@0)].		
	pointingTo = $W ifTrue: [position := position + (1@0)].		
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $E] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $N] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $S].].		].].
		].
	aStringCommand = 'r' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $E.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $W] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $S] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $N].].		].].
		].
! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:22:05' prior: 50887682!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
		MarsRoverPointingTowards foward.
		].
	aStringCommand = 'b' ifTrue: [
		MarsRoverPointingTowards backwards.
		].
	aStringCommand = 'l' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $W.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $E] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $N] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $S].].		].].
		].
	aStringCommand = 'r' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $E.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $W] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $S] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $N].].		].].
		].
! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:22:26'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:22:26'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:22:26'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:22:27'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:22:27'!
PASSED!
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:24:43'!
pointingToNorth

	^ MarsRoverPointingTowards := PointingTowardsNorth newWith: self! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:24:43' prior: 50887266!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.
	pointingTo = $N ifTrue: [self pointingToNorth.].
	pointingTo = $E ifTrue: [MarsRoverPointingTowards := PointingTowardsEast newWith: self.].
	pointingTo = $S ifTrue: [MarsRoverPointingTowards := PointingTowardsSouth newWith: self.].
	pointingTo = $W ifTrue: [MarsRoverPointingTowards := PointingTowardsWest newWith: self.].! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:24:56'!
poitingToEast

	^ MarsRoverPointingTowards := PointingTowardsEast newWith: self! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:24:56' prior: 50887799!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.
	pointingTo = $N ifTrue: [self pointingToNorth.].
	pointingTo = $E ifTrue: [self poitingToEast.].
	pointingTo = $S ifTrue: [MarsRoverPointingTowards := PointingTowardsSouth newWith: self.].
	pointingTo = $W ifTrue: [MarsRoverPointingTowards := PointingTowardsWest newWith: self.].! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:25:13'!
pointingToEast

	^ MarsRoverPointingTowards := PointingTowardsEast newWith: self! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:25:13' prior: 50887824!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.
	pointingTo = $N ifTrue: [self pointingToNorth.].
	pointingTo = $E ifTrue: [self pointingToEast.].
	pointingTo = $S ifTrue: [MarsRoverPointingTowards := PointingTowardsSouth newWith: self.].
	pointingTo = $W ifTrue: [MarsRoverPointingTowards := PointingTowardsWest newWith: self.].! !

!methodRemoval: MarsRover #poitingToEast stamp: 'A C 10/24/2020 16:25:13'!
poitingToEast

	^ MarsRoverPointingTowards := PointingTowardsEast newWith: self!
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:26:06'!
pointingToSouth

	^ MarsRoverPointingTowards := PointingTowardsSouth newWith: self! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:26:06' prior: 50887848!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.
	pointingTo = $N ifTrue: [self pointingToNorth.].
	pointingTo = $E ifTrue: [self pointingToEast.].
	pointingTo = $S ifTrue: [self pointingToSouth.].
	pointingTo = $W ifTrue: [MarsRoverPointingTowards := PointingTowardsWest newWith: self.].! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:26:18'!
pointingToWest

	^ MarsRoverPointingTowards := PointingTowardsWest newWith: self! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:26:18' prior: 50887877!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	pointingTo := aCardinalPoint.
	height := anIntenger.
	width := aInteger.
	pointingTo = $N ifTrue: [self pointingToNorth.].
	pointingTo = $E ifTrue: [self pointingToEast.].
	pointingTo = $S ifTrue: [self pointingToSouth.].
	pointingTo = $W ifTrue: [self pointingToWest.].! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:26:48' prior: 50887900!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	height := anIntenger.
	width := aInteger.
	aCardinalPoint = $N ifTrue: [self pointingToNorth.].
	aCardinalPoint = $E ifTrue: [self pointingToEast.].
	aCardinalPoint = $S ifTrue: [self pointingToSouth.].
	aCardinalPoint = $W ifTrue: [self pointingToWest.].! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 16:27:39' prior: 50887916!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	height := anIntenger.
	width := aInteger.
	aCardinalPoint = $N ifTrue: [self pointingToNorth.].
	aCardinalPoint = $E ifTrue: [self pointingToEast.].
	aCardinalPoint = $S ifTrue: [self pointingToSouth.].
	aCardinalPoint = $W ifTrue: [self pointingToWest.].! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 16:27:58' prior: 50887842!
pointingToEast

	MarsRoverPointingTowards := PointingTowardsEast newWith: self! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 16:28:03' prior: 50887793!
pointingToNorth

	MarsRoverPointingTowards := PointingTowardsNorth newWith: self! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 16:28:07' prior: 50887871!
pointingToSouth

	MarsRoverPointingTowards := PointingTowardsSouth newWith: self! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 16:28:10' prior: 50887894!
pointingToWest

	MarsRoverPointingTowards := PointingTowardsWest newWith: self! !
!MarsRoverPointingTowardsState methodsFor: 'subclass' stamp: 'A C 10/24/2020 16:28:57'!
pointingTo
	self subclassResponsibility.! !
!PointingTowardsSouth methodsFor: 'subclass' stamp: 'A C 10/24/2020 16:29:08' overrides: 50887970!
pointingTo
	self subclassResponsibility.! !
!PointingTowardsEast methodsFor: 'subclass' stamp: 'A C 10/24/2020 16:29:08' overrides: 50887970!
pointingTo
	self subclassResponsibility.! !
!PointingTowardsWest methodsFor: 'subclass' stamp: 'A C 10/24/2020 16:29:08' overrides: 50887970!
pointingTo
	self subclassResponsibility.! !
!PointingTowardsNorth methodsFor: 'subclass' stamp: 'A C 10/24/2020 16:29:08' overrides: 50887970!
pointingTo
	self subclassResponsibility.! !

!methodRemoval: MarsRoverPointingTowardsState #pointingTo stamp: 'A C 10/24/2020 16:29:08'!
pointingTo
	self subclassResponsibility.!
!MarsRoverPointingTowardsState methodsFor: 'subclass' stamp: 'A C 10/24/2020 16:29:11'!
pointingTo
	self subclassResponsibility.! !
!PointingTowardsEast methodsFor: 'subclass' stamp: 'A C 10/24/2020 16:29:30' prior: 50887980 overrides: 50887999!
pointingTo
	^$E.! !
!PointingTowardsNorth methodsFor: 'subclass' stamp: 'A C 10/24/2020 16:29:40' prior: 50887990 overrides: 50887999!
pointingTo
	^$N.! !
!PointingTowardsSouth methodsFor: 'subclass' stamp: 'A C 10/24/2020 16:29:51' prior: 50887975 overrides: 50887999!
pointingTo
	^$S.! !
!PointingTowardsWest methodsFor: 'subclass' stamp: 'A C 10/24/2020 16:30:04' prior: 50887985 overrides: 50887999!
pointingTo
	^$W.! !
!PointingTowardsEast methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:31:32' prior: 50883949 overrides: 50884034!
rotateLeft
	MarsRover pointingToNorth.! !
!PointingTowardsEast methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:31:50' prior: 50883974 overrides: 50884039!
rotateRight
	MarsRover pointingToSouth.! !
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:32:14' prior: 50883939 overrides: 50884034!
rotateLeft
	MarsRover pointingToWest.! !
!PointingTowardsNorth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:32:30' prior: 50883964 overrides: 50884039!
rotateRight
	MarsRover pointingToEast.! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:33:01' prior: 50883944 overrides: 50884034!
rotateLeft
	MarsRover pointingToWest.! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:33:14' prior: 50883969 overrides: 50884039!
rotateRight
	MarsRover pointingToEast.! !
!PointingTowardsWest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:33:37' prior: 50883954 overrides: 50884034!
rotateLeft
	MarsRover pointingToSouth.! !
!PointingTowardsWest methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:33:57' prior: 50883979 overrides: 50884039!
rotateRight
	MarsRover pointingToNorth.! !

----SNAPSHOT----(24 October 2020 16:34:12) CuisUniversity-4383.image priorSource: 17792907!

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:34:19'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:34:19'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:34:19'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:34:19'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:34:19'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:34:19'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:34:19'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:34:19'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:34:19'!
FAILURE!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:34:19'!
FAILURE!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:34:19'!
FAILURE!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:34:20'!
FAILURE!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:34:20'!
FAILURE!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:34:20'!
FAILURE!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:34:20'!
FAILURE!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:34:20'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'A C 10/24/2020 16:34:48' prior: 50883098!
pointingTo
	^MarsRoverPointingTowards pointingTo.
	
	! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:35:33' prior: 50887721!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
		MarsRoverPointingTowards foward.
		].
	aStringCommand = 'b' ifTrue: [
		MarsRoverPointingTowards backwards.
		].
	aStringCommand = 'l' ifTrue: [
		MarsRoverPointingTowards rotateLeft.
	pointingTo = $N ifTrue: [pointingTo := $W.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $E] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $N] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $S].].		].].
		].
	aStringCommand = 'r' ifTrue: [
	pointingTo = $N ifTrue: [pointingTo := $E.] ifFalse: [
	pointingTo = $S ifTrue: [pointingTo := $W] 	ifFalse: [
	pointingTo = $E ifTrue: [pointingTo := $S] 	ifFalse: [
	pointingTo = $W ifTrue: [pointingTo := $N].].		].].
		].
! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:35:55' prior: 50888126!
reciveCommand: aStringCommand
	aStringCommand = 'f' ifTrue: [
		MarsRoverPointingTowards foward.
		].
	aStringCommand = 'b' ifTrue: [
		MarsRoverPointingTowards backwards.
		].
	aStringCommand = 'l' ifTrue: [
		MarsRoverPointingTowards rotateLeft.
		].
	aStringCommand = 'r' ifTrue: [
		MarsRoverPointingTowards rotateRight.
		].
! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:36:11'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:36:11'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:36:11'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:36:11'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:36:11'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:36:11'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:36:11'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:36:11'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:36:11'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:36:12'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:36:12'!
FAILURE!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:36:12'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:36:12'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:36:12'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:36:12'!
FAILURE!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:36:12'!
PASSED!
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:37:18' prior: 50888048 overrides: 50884034!
rotateLeft
	MarsRover pointingToEast.! !
!PointingTowardsSouth methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:37:28' prior: 50888054 overrides: 50884039!
rotateRight
	MarsRover pointingToWest.! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:37:32'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:37:32'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:37:32'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:37:32'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:37:32'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:37:32'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:37:32'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:37:32'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:37:32'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:37:32'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:37:32'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:37:33'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:37:33'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:37:33'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:37:33'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:37:33'!
PASSED!

----SNAPSHOT----(24 October 2020 16:37:50) CuisUniversity-4383.image priorSource: 17805418!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 16:38:31'!
test17LongCommand
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $W mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'r'.
	self assert: (rover pointingTo = $N).
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 16:39:09' prior: 50888274!
test17LongCommand
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $W mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'fbfblrlr'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = 0@0).

	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:39:22'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:39:22'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:39:22'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:39:22'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:39:22'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:39:22'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:39:22'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:39:23'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:39:23'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:39:23'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:39:23'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:39:23'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:39:23'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:39:23'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:39:23'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:39:23'!
PASSED!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 16:39:23'!
FAILURE!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 16:39:23'!
FAILURE!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:40:14'!
m1: aStringCommand

	aStringCommand = 'f' ifTrue: [
		MarsRoverPointingTowards foward.
		].
	aStringCommand = 'b' ifTrue: [
		MarsRoverPointingTowards backwards.
		].
	aStringCommand = 'l' ifTrue: [
		MarsRoverPointingTowards rotateLeft.
		].
	aStringCommand = 'r' ifTrue: [
		MarsRoverPointingTowards rotateRight.
		]! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:40:14' prior: 50888152!
reciveCommand: aStringCommand
	self m1: aStringCommand.
! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:40:49'!
decodeInstruction: aStringCommand

	aStringCommand = 'f' ifTrue: [
		MarsRoverPointingTowards foward.
		].
	aStringCommand = 'b' ifTrue: [
		MarsRoverPointingTowards backwards.
		].
	aStringCommand = 'l' ifTrue: [
		MarsRoverPointingTowards rotateLeft.
		].
	aStringCommand = 'r' ifTrue: [
		MarsRoverPointingTowards rotateRight.
		]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'A C 10/24/2020 16:40:49' prior: 50888358!
reciveCommand: aStringCommand
	self decodeInstruction: aStringCommand.
! !

!methodRemoval: MarsRover #m1: stamp: 'A C 10/24/2020 16:40:50'!
m1: aStringCommand

	aStringCommand = 'f' ifTrue: [
		MarsRoverPointingTowards foward.
		].
	aStringCommand = 'b' ifTrue: [
		MarsRoverPointingTowards backwards.
		].
	aStringCommand = 'l' ifTrue: [
		MarsRoverPointingTowards rotateLeft.
		].
	aStringCommand = 'r' ifTrue: [
		MarsRoverPointingTowards rotateRight.
		]!
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:41:18' prior: 50888362!
decodeInstruction: aCharacterCommand

	aCharacterCommand = 'f' ifTrue: [
		MarsRoverPointingTowards foward.
		].
	aCharacterCommand = 'b' ifTrue: [
		MarsRoverPointingTowards backwards.
		].
	aCharacterCommand = 'l' ifTrue: [
		MarsRoverPointingTowards rotateLeft.
		].
	aCharacterCommand = 'r' ifTrue: [
		MarsRoverPointingTowards rotateRight.
		]! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:41:53' prior: 50888393!
decodeInstruction: aCharacterCommand

	aCharacterCommand = $f ifTrue: [
		MarsRoverPointingTowards foward.
		].
	aCharacterCommand = $b ifTrue: [
		MarsRoverPointingTowards backwards.
		].
	aCharacterCommand = $l ifTrue: [
		MarsRoverPointingTowards rotateLeft.
		].
	aCharacterCommand = $r ifTrue: [
		MarsRoverPointingTowards rotateRight.
		]! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:43:46' prior: 50888376!
reciveCommand: aStringCommand
	aStringCommand do: [:aCharacterCommand | self decodeInstruction: aCharacterCommand.].
! !

'palabra' do: [:a | a print]!

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:45:18'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:45:19'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:45:19'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:45:19'!
PASSED!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 16:45:19'!
FAILURE!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 16:45:19'!
FAILURE!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 16:45:41' prior: 50888283!
test17LongCommand
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'fbfblrlr'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = 0@0).

	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:45:45'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:45:46'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:45:47'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:45:47'!
PASSED!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 16:45:47'!
ERROR!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 16:45:47'!
ERROR!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 16:46:02' prior: 50888482!
test17LongCommand
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'fbfblrlr'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = (0@0)).

	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 16:46:04'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 16:46:04'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 16:46:04'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 16:46:05'!
PASSED!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 16:46:05'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 16:47:27'!
test18IncorrectCommand
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'fbfblrlr'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = (0@0)).

	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 16:48:07' prior: 50888605!
test18IncorrectCommand
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'lKr'.
	self assert: (rover pointingTo = $W).
	self assert: (rover position = (0@0)).

	! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:49:24' prior: 50888407!
decodeInstruction: aCharacterCommand

	aCharacterCommand = $f ifTrue: [
		MarsRoverPointingTowards foward.
		].
	aCharacterCommand = $b ifTrue: [
		MarsRoverPointingTowards backwards.
		].
	aCharacterCommand = $l ifTrue: [
		MarsRoverPointingTowards rotateLeft.
		].
	aCharacterCommand = $r ifTrue: [
		MarsRoverPointingTowards rotateRight.
		].! !

'palabra' findFirst: [:a | a = $b]!

'palabra' findFirst: [:a | a = $y] !

'palabra' findFirst: [:a | a = $p] !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:53:32' prior: 50888421!
reciveCommand: aStringCommand
	
	aStringCommand do: [:aCharacterCommand | self decodeInstruction: aCharacterCommand.].
! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:54:27' prior: 50888642!
reciveCommand: aStringCommand
	| validatedCommand |
	validatedCommand := self validateCommand: aStringCommand.
	validatedCommand do: [:aCharacterCommand | self decodeInstruction: aCharacterCommand.].
! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:54:58'!
validateCommand: aStringCommand! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:55:58' prior: 50888658!
validateCommand: aStringCommand
	aStringCommand findFirst: [:aCharacterCommand | self invalidCommand: aCharacterCommand].! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:56:18'!
invalidCommand: aCharacterCommand
	! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:58:23' prior: 50888668!
invalidCommand: aCharacterCommand
	'fblr' indexOf: aCharacterCommand ifAbsent: [^true.]! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 16:58:36' prior: 50888672!
invalidCommand: aCharacterCommand
	'fblr' indexOf: aCharacterCommand ifAbsent: [^true.].
	^false.! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 17:00:36' prior: 50888662!
validateCommand: aStringCommand
	|numberOfValidCommands|
	numberOfValidCommands := aStringCommand findFirst: [:aCharacterCommand | self invalidCommand: aCharacterCommand].! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 17:02:24' prior: 50888684!
validateCommand: aStringCommand
	|numberOfValidCommands|
	numberOfValidCommands := (aStringCommand findFirst: [:aCharacterCommand | self invalidCommand: aCharacterCommand] - 1).
	numberOfValidCommands = -1 ifTrue:[numberOfValidCommands := aStringCommand size]! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 17:02:40' prior: 50888693!
validateCommand: aStringCommand
	|numberOfValidCommands|
	numberOfValidCommands := (aStringCommand findFirst: [:aCharacterCommand | self invalidCommand: aCharacterCommand] - 1).
	numberOfValidCommands = -1 ifTrue:[numberOfValidCommands := aStringCommand size].
	^numberOfValidCommands.! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 17:04:45' prior: 50888704!
validateCommand: aStringCommand
	|numberOfValidCommands|
	numberOfValidCommands := (aStringCommand findFirst: [:aCharacterCommand | self invalidCommand: aCharacterCommand] - 1).
	numberOfValidCommands = -1 ifTrue:[numberOfValidCommands := aStringCommand size].
	^aStringCommand copyFrom: 1 to: numberOfValidCommands.! !
!MarsRover methodsFor: 'public' stamp: 'A C 10/24/2020 17:04:58' prior: 50888716!
validateCommand: aStringCommand
	|numberOfValidCommands|
	numberOfValidCommands := (aStringCommand findFirst: [:aCharacterCommand | self invalidCommand: aCharacterCommand] - 1).
	numberOfValidCommands = -1 ifTrue:[numberOfValidCommands := aStringCommand size].
	^aStringCommand copyFrom: 0 to: numberOfValidCommands.! !

----SNAPSHOT----(24 October 2020 17:05:06) CuisUniversity-4383.image priorSource: 17811861!

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 17:05:12'!
ERROR!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 17:05:12'!
ERROR!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 17:05:12'!
ERROR!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 17:05:12'!
ERROR!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 17:05:13'!
ERROR!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 17:05:13'!
ERROR!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 17:05:13'!
ERROR!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 17:05:13'!
ERROR!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 17:05:13'!
ERROR!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 17:05:13'!
ERROR!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 17:05:13'!
ERROR!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 17:05:13'!
ERROR!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 17:05:13'!
ERROR!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 17:05:13'!
ERROR!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 17:05:13'!
ERROR!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 17:05:14'!
ERROR!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 17:05:14'!
ERROR!

!testRun: #MarsRoverTest #test18IncorrectCommand stamp: 'A C 10/24/2020 17:05:14'!
ERROR!

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 17:05:18'!
ERROR!
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:06:06' prior: 50888729!
validateCommand: aStringCommand
	|numberOfValidCommands|
	numberOfValidCommands := (aStringCommand findFirst: [:aCharacterCommand | self invalidCommand: aCharacterCommand]) - 1.
	numberOfValidCommands = -1 ifTrue:[numberOfValidCommands := aStringCommand size].
	^aStringCommand copyFrom: 0 to: numberOfValidCommands.! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 17:06:12'!
ERROR!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 17:06:13'!
ERROR!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 17:06:13'!
ERROR!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 17:06:13'!
ERROR!

!testRun: #MarsRoverTest #test18IncorrectCommand stamp: 'A C 10/24/2020 17:06:13'!
ERROR!

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 17:06:14'!
ERROR!
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:06:45' prior: 50888800!
validateCommand: aStringCommand
	|numberOfValidCommands|
	numberOfValidCommands := (aStringCommand findFirst: [:aCharacterCommand | self invalidCommand: aCharacterCommand]) - 1.
	numberOfValidCommands = -1 ifTrue:[numberOfValidCommands := aStringCommand size].
	^aStringCommand copyFrom: 1 to: numberOfValidCommands.! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 17:06:50'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 17:06:50'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 17:06:50'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 17:06:50'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 17:06:50'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 17:06:50'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 17:06:50'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 17:06:50'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 17:06:50'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 17:06:51'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 17:06:51'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 17:06:51'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 17:06:51'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 17:06:51'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 17:06:51'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 17:06:51'!
PASSED!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 17:06:51'!
PASSED!

!testRun: #MarsRoverTest #test18IncorrectCommand stamp: 'A C 10/24/2020 17:06:51'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:09:42'!
test19IncorrectLongCommand
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'lKr'.
	self assert: (rover pointingTo = $W).
	self assert: (rover position = (0@0)).

	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:10:01' prior: 50888615!
test18IncorrectCommand
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'K'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = (0@0)).

	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 17:10:06'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 17:10:06'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 17:10:06'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 17:10:06'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 17:10:06'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 17:10:06'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 17:10:06'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 17:10:06'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 17:10:06'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 17:10:06'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 17:10:07'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 17:10:07'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 17:10:07'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 17:10:07'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 17:10:07'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 17:10:07'!
PASSED!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 17:10:07'!
PASSED!

!testRun: #MarsRoverTest #test18IncorrectCommand stamp: 'A C 10/24/2020 17:10:07'!
PASSED!

!testRun: #MarsRoverTest #test19IncorrectLongCommand stamp: 'A C 10/24/2020 17:10:07'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:10:47' prior: 50888934!
test19IncorrectLongCommand
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'flKrb'.
	self assert: (rover pointingTo = $W).
	self assert: (rover position = (0@1)).

	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 17:10:50'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 17:10:50'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 17:10:50'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 17:10:50'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 17:10:50'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 17:10:50'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 17:10:50'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 17:10:50'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 17:10:50'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 17:10:50'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 17:10:50'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 17:10:51'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 17:10:51'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 17:10:51'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 17:10:51'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 17:10:51'!
PASSED!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 17:10:51'!
PASSED!

!testRun: #MarsRoverTest #test18IncorrectCommand stamp: 'A C 10/24/2020 17:10:51'!
PASSED!

!testRun: #MarsRoverTest #test19IncorrectLongCommand stamp: 'A C 10/24/2020 17:10:51'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:13:17'!
test20MoveOutOfBounds
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'flKrb'.
	self assert: (rover pointingTo = $W).
	self assert: (rover position = (0@1)).

	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:13:47' prior: 50889076!
test20MoveOutOfBounds
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = (0@9)).

	! !

!testRun: #MarsRoverTest #test20MoveOutOfBounds stamp: 'A C 10/24/2020 17:13:53'!
FAILURE!

!testRun: #MarsRoverTest #test20MoveOutOfBounds stamp: 'A C 10/24/2020 17:13:53'!
FAILURE!
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:15:07' prior: 50887065!
move: aBlock
	position := aBlock value: position.
	self inBounds: position.! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:15:31'!
inBounds: thePosition! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:15:34' prior: 50889107!
inBounds: thePosition
	! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:15:39' prior: 50889111!
inBounds: theMarsRoverPosition
	! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:15:50'!
inBounds
	! !

!methodRemoval: MarsRover #inBounds: stamp: 'A C 10/24/2020 17:15:54'!
inBounds: theMarsRoverPosition
	!
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:16:01' prior: 50889102!
move: aBlock
	position := aBlock value: position.
	self inBounds.! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:17:51' prior: 50889119!
inBounds
	position := ((position x mod: width) @ (position y mod: height))! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:18:04' prior: 50889131!
inBounds
	position := ((position x mod: width) @ (position y mod: height)).! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test18IncorrectCommand stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test19IncorrectLongCommand stamp: 'A C 10/24/2020 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test20MoveOutOfBounds stamp: 'A C 10/24/2020 17:18:40'!
PASSED!

----SNAPSHOT----(24 October 2020 17:18:43) CuisUniversity-4383.image priorSource: 17826911!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:19:11'!
test20MoveOutOfBoundsYAxis
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = (0@9)).

	! !

!methodRemoval: MarsRoverTest #test20MoveOutOfBounds stamp: 'A C 10/24/2020 17:19:15'!
test20MoveOutOfBounds
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = (0@9)).

	!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:19:41'!
test20MoveOutOfBoundsXAxis
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $E mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover pointingTo = $E).
	self assert: (rover position = (9@0)).

	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:19:48'!
test21MoveOutOfBoundsYAxis
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = (0@9)).

	! !

!methodRemoval: MarsRoverTest #test20MoveOutOfBoundsYAxis stamp: 'A C 10/24/2020 17:19:51'!
test20MoveOutOfBoundsYAxis
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = (0@9)).

	!

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 17:19:57'!
PASSED!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 17:19:58'!
PASSED!

!testRun: #MarsRoverTest #test18IncorrectCommand stamp: 'A C 10/24/2020 17:19:58'!
PASSED!

!testRun: #MarsRoverTest #test19IncorrectLongCommand stamp: 'A C 10/24/2020 17:19:58'!
PASSED!

!testRun: #MarsRoverTest #test20MoveOutOfBoundsXAxis stamp: 'A C 10/24/2020 17:19:58'!
PASSED!

!testRun: #MarsRoverTest #test21MoveOutOfBoundsYAxis stamp: 'A C 10/24/2020 17:19:58'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:20:42'!
test22InitialPositionOutOfBounds
	|rover|
	rover := MarsRover newStartingAt: 0@0 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = (0@9)).

	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:20:51' prior: 50889316!
test22InitialPositionOutOfBounds
	|rover|
	rover := MarsRover newStartingAt: 100@100 pointingTo: $N mapHeight: 10 mapWidth: 10.
	rover reciveCommand: 'b'.
	self assert: (rover pointingTo = $N).
	self assert: (rover position = (0@9)).

	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:21:23' prior: 50889327!
test22InitialPositionOutOfBounds
	
	MarsRover newStartingAt: 100@100 pointingTo: $N mapHeight: 10 mapWidth: 10.
	

	! !

----End fileIn of C:\Users\Usuario\Desktop\ing sftwr 1\asdasd\windows64\Stack-Exercise.st----!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:23:35' prior: 50889338!
test22InitialPositionOutOfBounds
	self
		should: [	MarsRover newStartingAt: 100@100 pointingTo: $N mapHeight: 10 mapWidth: 10.]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = OOStack stackEmptyErrorDescription ]
		

	
	
	
	

	

	! !
!MarsRover class methodsFor: 'nil' stamp: 'A C 10/24/2020 17:25:15'!
InitialPositionOutOfBoundsErrorDescription
	'Initial Position out of bounds!!'.! !
!MarsRover class methodsFor: 'instance creation' stamp: 'A C 10/24/2020 17:25:50' prior: 50882343!
newStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	^self new initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger
! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:26:15'!
validateInitialPosition! !
!MarsRover methodsFor: 'initialization' stamp: 'A C 10/24/2020 17:26:44' prior: 50887931!
initializeNewStartingAt: aPoint pointingTo: aCardinalPoint mapHeight: anIntenger mapWidth: aInteger 
	position := aPoint.
	height := anIntenger.
	width := aInteger.
	self validateInitialPosition.
	aCardinalPoint = $N ifTrue: [self pointingToNorth.].
	aCardinalPoint = $E ifTrue: [self pointingToEast.].
	aCardinalPoint = $S ifTrue: [self pointingToSouth.].
	aCardinalPoint = $W ifTrue: [self pointingToWest.].! !
!MarsRover methodsFor: 'private' stamp: 'A C 10/24/2020 17:28:27' prior: 50890036!
validateInitialPosition
	(position x between: 0 and: width) ifFalse:[self error: MarsRover InitialPositionOutOfBoundsErrorDescription.].
	(position y between: 0 and: height) ifFalse:[self error: MarsRover InitialPositionOutOfBoundsErrorDescription.].! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 17:28:44'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 17:28:45'!
PASSED!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 17:28:45'!
PASSED!

!testRun: #MarsRoverTest #test18IncorrectCommand stamp: 'A C 10/24/2020 17:28:45'!
PASSED!

!testRun: #MarsRoverTest #test19IncorrectLongCommand stamp: 'A C 10/24/2020 17:28:45'!
PASSED!

!testRun: #MarsRoverTest #test20MoveOutOfBoundsXAxis stamp: 'A C 10/24/2020 17:28:45'!
PASSED!

!testRun: #MarsRoverTest #test21MoveOutOfBoundsYAxis stamp: 'A C 10/24/2020 17:28:45'!
PASSED!

!testRun: #MarsRoverTest #test22InitialPositionOutOfBounds stamp: 'A C 10/24/2020 17:28:45'!
FAILURE!

!testRun: #MarsRoverTest #test22InitialPositionOutOfBounds stamp: 'A C 10/24/2020 17:28:45'!
FAILURE!
!MarsRoverTest methodsFor: 'testing' stamp: 'A C 10/24/2020 17:29:10' prior: 50890010!
test22InitialPositionOutOfBounds
	self
		should: [	MarsRover newStartingAt: 100@100 pointingTo: $N mapHeight: 10 mapWidth: 10.]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover InitialPositionOutOfBoundsErrorDescription ]
		

	
	
	
	

	

	! !

!testRun: #MarsRoverTest #test01MoveForwardNorth stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouth stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test03MoveForwardEast stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardWest stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorth stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test06MoveBackwardSouth stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEast stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test08MoveBackwardWest stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test09RotateLeftNorthToWest stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test10RotateLeftWestToSouth stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test11RotateLeftSouthToEast stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test12RotateLeftEastToNorth stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test13RotateRightNorthToEast stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test14RotateRightEastToSouth stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test15RotateRightSouthToWest stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test16RotateRightWestToNorth stamp: 'A C 10/24/2020 17:29:13'!
PASSED!

!testRun: #MarsRoverTest #test17LongCommand stamp: 'A C 10/24/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test18IncorrectCommand stamp: 'A C 10/24/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test19IncorrectLongCommand stamp: 'A C 10/24/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test20MoveOutOfBoundsXAxis stamp: 'A C 10/24/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test21MoveOutOfBoundsYAxis stamp: 'A C 10/24/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test22InitialPositionOutOfBounds stamp: 'A C 10/24/2020 17:29:14'!
PASSED!

----SNAPSHOT----(24 October 2020 17:32:48) CuisUniversity-4383.image priorSource: 17841608!